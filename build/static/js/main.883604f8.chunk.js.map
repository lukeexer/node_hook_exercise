{"version":3,"sources":["components/Menu/index.ts","components/Menu/Menu.tsx","actions/user.ts","Views/Home/Home.tsx","Views/Home/index.ts","Views/About/index.ts","Views/About/About.tsx","Views/Notfound/index.ts","Views/Notfound/Notfound.tsx","Views/News/NewsList.tsx","actions/news.ts","Views/News/NewsReader.tsx","Views/News/NewsForm.tsx","Views/News/index.ts","Views/News/News.tsx","reducers/news.ts","reducers/user.ts","store/index.ts","index.tsx"],"names":["Menu","to","setUser","user","type","payload","Home","dispatch","useDispatch","useEffect","a","fetch","response","json","JSON","stringify","useSelector","state","About","Notfound","NewsList","props","news","map","theNews","id","name","onClick","NewsReader","targetNewsId","match","params","targetNews","find","String","undefined","describe","connect","addNews","useState","setName","setDescribe","placeholder","value","onChange","e","target","Math","random","News","exact","path","component","initialState","action","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","next","console","log","getState","ReactDOM","render","NotFound","document","getElementById"],"mappings":"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","file":"static/js/main.883604f8.chunk.js","sourcesContent":["import Menu from \"./Menu\";\n\nexport default Menu;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Menu = () => (\n    <ul>\n        <li>\n            <Link to=\"/home\">Main Page</Link>\n        </li>\n        <li>\n            <Link to=\"/about\">About Us</Link>\n        </li>\n        <li>\n            <Link to=\"/news\">News</Link>\n        </li>\n    </ul>\n);\n\nexport default Menu;","import { Dispatch } from 'redux';\nimport { UserState } from '../reducers/user';\n\nexport interface SetUserPayload {\n    user: UserState\n};\n\nexport interface SetUser {\n    type: string,\n    payload: SetUserPayload\n};\n\nconst setUser = (user: SetUser) => ({\n    type: 'SET_USER',\n    payload: {user},\n});\n\nexport const fetchUser = () => async(dispatch: Dispatch) => {\n    const response = await fetch('http://httpbin.org/get');\n    const user = await response.json();\n    dispatch(setUser(user));\n};","import React, {useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { fetchUser } from '../../actions/user';\nimport { RootState } from '../../store';\n// import HelloWorld from '../../components/HelloWorld';\n// import SayHello from '../../components/SayHello'\n// import Counter from '../../components/Counter'\n\nconst Home = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchUser());\n    }, []);\n\n    return (\n        <div>\n            <h1>The is the Home Page.</h1>\n            <div>\n                {JSON.stringify(useSelector((state: RootState) => state.user.user))}\n            </div>\n        </div>\n    );\n};\n\n// const names = ['world', null, 'air', 'water'];\n\n// const Home = () => {\n//     const [displayCounter, setDisplayCounter] = useState(true);\n\n//     return (\n//     <div>\n//         <button onClick={() => {setDisplayCounter(true);}}>Show Counter</button>\n//         <button onClick={() => {setDisplayCounter(false);}}>Remove Counter</button>\n//         {displayCounter ? <Counter/> : null}\n\n//         <HelloWorld />\n//         <div>\n//             <SayHello name='world' />\n//             <SayHello name='sun' />\n//             <SayHello name='air' />\n//             <SayHello name='water' />\n//         </div>\n//         <div>\n//             {\n//                 names.map(name => <SayHello key={name} name={name} />)\n//             }\n//         </div>\n//         <Counter />\n//         <Counter />\n//     </div>\n//     );\n// };\n\nexport default Home;","import Home from './Home'\n\nexport default Home;","import About from './About';\n\nexport default About;","import React from 'react';\n\nconst About = () => (\n    <div>\n        <h1>The is the About Us Page.</h1>\n    </div>\n);\n\nexport default About;","import Notfound from \"./Notfound\";\n\nexport default Notfound;","import React from 'react';\n\nconst NotFound = () => (\n    <h1>Did you lost your way? Nothing at Here.</h1>\n);\n\nexport default NotFound;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {deleteNews} from '../../actions/news';\nimport { News } from '../../reducers/news';\nimport { RootState } from '../../store';\n\nconst NewsList = (props: any) => {\n        const dispatch = useDispatch();\n        \n        return (\n            <ul>\n                {\n                    useSelector((state: RootState) => state.news.news).map((theNews: News) => (\n                        <li key={theNews.id}>\n                            <Link to={`/news/newsReader/${theNews.id}`}>\n                                {theNews.name}\n                            </Link>\n                            <button onClick={() => {dispatch(deleteNews(theNews.id));}}>\n                                Delete\n                            </button>\n                        </li>\n                        ))\n                }\n            </ul>\n        );\n};\n\nexport default NewsList;","import { News } from '../reducers/news';\n\nexport interface addNewsPayload {\n    news: News\n};\n\nexport interface AddNews {\n    type: string,\n    payload: addNewsPayload\n};\n\nexport interface DeleteNewsPayload {\n    id: number\n};\n\nexport interface DeleteNews {\n    type: string,\n    payload: DeleteNewsPayload\n};\n\nexport type NewsActionTypes = AddNews | DeleteNews;\n\nexport const addNews = (news: News): AddNews => (\n    {type: 'ADD_NEWS', payload: {news}}\n);\n\nexport const deleteNews = (id: number): DeleteNews => (\n    {type: 'DELETE_NEWS', payload: {id}}\n);","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport { News } from '../../reducers/news';\nimport { RootState } from '../../store';\n\nconst NewsReader = (props: any) => {\n    //console.log(props.match);\n    const targetNewsId = props.match.params.id;\n    const news = useSelector((state: RootState) => state.news.news);\n    let targetNews = news.find(theNews => (\n        String(theNews.id) === String(targetNewsId)\n    ));\n    if (targetNews === undefined) {\n        targetNews = {id: 0, name: '', describe: ''};\n    }\n\n    return (\n        <div>\n            <h1>You are reading {targetNews.name}</h1>\n            <p>{targetNews.describe}</p>\n        </div>\n    );\n};\n\nexport default NewsReader;","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addNews } from '../../actions/news';\nimport { News } from '../../reducers/news';\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    addNews: (news: News) => {\n        dispatch(addNews(news));\n    },\n});\n\nconst NewsForm = (props: any) => {\n    const [name, setName] = useState('');\n    const [describe, setDescribe] = useState('');\n\n    return (\n        <div>\n            Name: <input placeholder=\"Please input name\" value={name} onChange={(e) => {setName(e.target.value);}} />\n            Desc: <input placeholder=\"Please input desc\" value={describe} onChange={(e) => {setDescribe(e.target.value);}} />\n            <button onClick={() => {\n                    props.addNews({id: Math.random(), name, describe})\n                }}\n            >Add a News</button>\n        </div>\n    )\n};\n\nexport default connect(null, mapDispatchToProps)(NewsForm);","import News from './News';\n\nexport default News;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport NewsList from './NewsList';\nimport NewsReader from './NewsReader';\nimport NewsForm from './NewsForm';\n\nconst News = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/news\" component={() => (\n                <div>\n                    <h1>Here are the new messages:</h1>\n                    <NewsForm />\n                    <NewsList />\n                </div>\n            )} />\n            <Route path=\"/news/newsReader/:id\" component={NewsReader} />\n        </Switch>\n    )\n};\n\nexport default News;","import { NewsActionTypes, AddNews, DeleteNews } from '../actions/news';\n\nexport interface News {\n    id: number,\n    name: string,\n    describe: string\n};\n\nexport interface NewsState {\n    news: News[]\n}\n\nconst initialState: NewsState = {\n    news: [\n        {id: 1, name: 'The First Message', describe: 'This is the first desc.'},\n        {id: 2, name: 'The Second Message', describe: 'This is the second desc.'},\n        {id: 3, name: 'The Third Message', describe: 'This is the third desc.'},\n    ],\n};\n\nconst news = (state=initialState, action: NewsActionTypes): NewsState => {\n    switch (action.type) {\n        case 'ADD_NEWS':\n            return {\n                ...state,\n                news: [\n                    ...state.news,\n                    (<AddNews>action).payload.news,\n                ]\n            };\n        case 'DELETE_NEWS':\n            return {\n                ...state,\n                news: state.news.filter((theNews: News) => {\n                    return theNews.id !== (<DeleteNews>action).payload.id\n                }),\n            };\n        default:\n            return state;\n    }\n};\n\nexport default news;","import { SetUser } from \"../actions/user\";\n\nexport interface UserState {\n    name: string,\n    user: any\n};\n\nconst initialState: UserState = {\n    name: 'Luke',\n    user: {},\n};\n\nconst user = (state=initialState, action: SetUser): UserState => {\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.payload.user,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default user;","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport  { Middleware } from 'redux';\nimport news from '../reducers/news';\nimport user from '../reducers/user';\n\nconst logger: Middleware = store => next => (action) => {\n    console.log('This will executes: ', action);\n    console.log('Before execution, the state is: ', store.getState());\n\n    next(action);\n\n    console.log('After the execution, the state is: ', store.getState());\n\n    return 'I\\'m logger 1\\'s return value';\n};\n\n// const logger2 = store => next => (action) => {\n//     const result = next(action);\n//     console.log(result);\n// };\n\nconst rootReducer = combineReducers({news, user});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk, logger),\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport 'regenerator-runtime/runtime';\nimport 'core-js/stable';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport Menu from './components/Menu';\nimport Home from './Views/Home';\nimport About from './Views/About';\nimport NotFound from './Views/Notfound';\nimport News from './Views/News';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <Menu />\n            <Switch>\n                <Route exact path=\"/home\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route path=\"/news\" component={News} />\n                <Route path=\"/\" component={NotFound} />\n            </Switch>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}